{"ast":null,"code":"var _jsxFileName = \"/Users/hyungjunkim/BroStudy/react-todolist/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef, useCallback } from 'react';\nimport ToDoEdit from './components/ToDoEdit';\nimport ToDoInsert from './components/ToDoInsert';\nimport TodoList from './components/TodoList';\nimport TodoTemplate from './components/ToDoTemplate';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n  const [selectedTodo, setSelectedTodo] = useState(null);\n  const [insertToggle, setInsertToggle] = useState(false);\n  const nextId = useRef(4);\n  const onInsertToggle = useCallback(() => {\n    if (selectedTodo) {\n      setSelectedTodo(selectedTodo => null);\n    }\n\n    setInsertToggle(prev => !prev);\n  }, [selectedTodo]);\n\n  const onChangeSelectedTodo = todo => {\n    setSelectedTodo(selectedTodo => todo);\n  };\n\n  const onInsert = text => {\n    const todo = {\n      id: nextId.current,\n      text,\n      checked: false\n    };\n    setTodos(todos => todos.concat(todo)); //concat(): 인자로 주어진 배열이나 값들을 기존 배열에 합쳐서 새 배열 반환\n\n    nextId.current++; //nextId 1씩 더하기\n  };\n\n  const onRemove = id => {\n    setTodos(todos => todos.filter(todo => todo.id !== id));\n  };\n\n  const onUpdate = useCallback((id, text) => {\n    onInsertToggle();\n    setTodos(todos => todos.map(todo => todo.id === id ? { ...todo,\n      text\n    } : todo));\n  }, [onInsertToggle]);\n  const onToggle = useCallback(id => {\n    setTodos(todos => todos.map(todo => todo.id === id ? { ...todo,\n      checked: !todo.checked\n    } : todo));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(TodoTemplate, {\n    children: [/*#__PURE__*/_jsxDEV(ToDoInsert, {\n      onInsert: onInsert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n      todos: todos,\n      onToggle: onToggle,\n      onRemove: onRemove,\n      onChangeSelectedTodo: onChangeSelectedTodo,\n      onInsertToggle: onInsertToggle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), insertToggle && /*#__PURE__*/_jsxDEV(ToDoEdit, {\n      onInsert: onInsert,\n      selectedTodo: selectedTodo,\n      onInsertToggle: onInsertToggle,\n      onUpdate: onUpdate,\n      insertToggle: insertToggle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"GX1UFmLkrljFk2XcQrft+2CY9LU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/hyungjunkim/BroStudy/react-todolist/src/App.js"],"names":["useState","useRef","useCallback","ToDoEdit","ToDoInsert","TodoList","TodoTemplate","App","todos","setTodos","selectedTodo","setSelectedTodo","insertToggle","setInsertToggle","nextId","onInsertToggle","prev","onChangeSelectedTodo","todo","onInsert","text","id","current","checked","concat","onRemove","filter","onUpdate","map","onToggle"],"mappings":"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","sourcesContent":["import { useState, useRef, useCallback } from 'react';\nimport ToDoEdit from './components/ToDoEdit';\nimport ToDoInsert from './components/ToDoInsert';\nimport TodoList from './components/TodoList';\nimport TodoTemplate from './components/ToDoTemplate';\n\nfunction App() {\n  const [todos, setTodos] = useState([]);\n  const [selectedTodo, setSelectedTodo] = useState(null);\n  const [insertToggle, setInsertToggle] = useState(false);\n\n\n  const nextId = useRef(4);\n  const onInsertToggle = useCallback(() => {\n    if (selectedTodo) {\n      setSelectedTodo((selectedTodo) => null);\n    }\n    setInsertToggle((prev) => !prev);\n  }, [selectedTodo]);\n\n  const onChangeSelectedTodo = (todo) => {\n    setSelectedTodo((selectedTodo) => todo);\n  };\n\n  const onInsert = (text) => {\n    const todo = {\n      id: nextId.current,\n      text,\n      checked: false,\n    };\n    setTodos((todos) => todos.concat(todo)); //concat(): 인자로 주어진 배열이나 값들을 기존 배열에 합쳐서 새 배열 반환\n    nextId.current++; //nextId 1씩 더하기\n  }\n\n  const onRemove = (id) => {\n    setTodos((todos) => todos.filter((todo) => todo.id !== id));\n  }\n  const onUpdate = useCallback(\n    (id, text) => {\n      onInsertToggle();\n\n      setTodos((todos) =>\n        todos.map((todo) => (todo.id === id ? { ...todo, text } : todo)),\n      );\n    },\n    [onInsertToggle],\n  );\n  const onToggle = useCallback((id) => {\n    setTodos((todos) =>\n      todos.map((todo) =>\n        todo.id === id ? { ...todo, checked: !todo.checked } : todo,\n      ),\n    );\n  }, []);\n\n\n  \n  return (\n    <TodoTemplate>\n      <ToDoInsert onInsert={onInsert} />\n      <TodoList\n        todos={todos}\n        onToggle={onToggle}\n        onRemove={onRemove}\n        onChangeSelectedTodo={onChangeSelectedTodo}\n        onInsertToggle={onInsertToggle}\n      />\n      {insertToggle && (\n        <ToDoEdit\n          onInsert={onInsert}\n          selectedTodo={selectedTodo}\n          onInsertToggle={onInsertToggle}\n          onUpdate={onUpdate}\n          insertToggle={insertToggle}\n        />\n      )}\n    </TodoTemplate>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}