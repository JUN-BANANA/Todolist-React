{"ast":null,"code":"var _jsxFileName = \"/Users/hyungjunkim/BroStudy/react-todolist/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef, useCallback } from 'react';\nimport ToDoEdit from './components/ToDoEdit';\nimport ToDoInsert from './components/ToDoInsert';\nimport TodoList from './components/TodoList';\nimport TodoTemplate from './components/ToDoTemplate';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n  const [selectedTodo, setSelectedTodo] = useState(null);\n  const [insertToggle, setInsertToggle] = useState(false);\n  const nextId = useRef();\n  const onInsertToggle = useCallback(() => {\n    if (selectedTodo) {\n      setSelectedTodo(selectedTodo => null);\n    }\n\n    setInsertToggle(prev => !prev);\n  }, [selectedTodo]);\n\n  const onChangeSelectedTodo = todo => {\n    setSelectedTodo(selectedTodo => todo);\n  };\n\n  const onInsert = text => {\n    const todo = {\n      text,\n      checked: false\n    };\n    setTodos(todos => todos.concat(todo));\n  };\n\n  const onRemove = id => {\n    setTodos(todos => todos.filter(todo => todo.id !== id));\n  };\n\n  const onUpdate = (id, text) => {\n    onInsertToggle();\n    setTodos(todos => todos.map(todo => todo.id === id ? { ...todo,\n      text\n    } : todo));\n  };\n\n  const onToggle = id => {\n    setTodos(todos => todos.map(todo => todo.id === id ? { ...todo,\n      checked: !todo.checked\n    } : todo));\n  };\n\n  return /*#__PURE__*/_jsxDEV(TodoTemplate, {\n    children: [/*#__PURE__*/_jsxDEV(ToDoInsert, {\n      onInsert: onInsert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n      todos: todos,\n      onToggle: onToggle,\n      onRemove: onRemove,\n      onChangeSelectedTodo: onChangeSelectedTodo,\n      onInsertToggle: onInsertToggle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), insertToggle && /*#__PURE__*/_jsxDEV(ToDoEdit, {\n      onInsert: onInsert,\n      selectedTodo: selectedTodo,\n      onInsertToggle: onInsertToggle,\n      onUpdate: onUpdate,\n      insertToggle: insertToggle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"T4Sgc0iLq+7p0kTUwxaQag35STQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/hyungjunkim/BroStudy/react-todolist/src/App.js"],"names":["useState","useRef","useCallback","ToDoEdit","ToDoInsert","TodoList","TodoTemplate","App","todos","setTodos","selectedTodo","setSelectedTodo","insertToggle","setInsertToggle","nextId","onInsertToggle","prev","onChangeSelectedTodo","todo","onInsert","text","checked","concat","onRemove","id","filter","onUpdate","map","onToggle"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,MAAnB,EAA2BC,WAA3B,QAA8C,OAA9C;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACU,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,CAAC,IAAD,CAAhD;AACA,QAAM,CAACY,YAAD,EAAeC,eAAf,IAAkCb,QAAQ,CAAC,KAAD,CAAhD;AAGA,QAAMc,MAAM,GAAGb,MAAM,EAArB;AAEA,QAAMc,cAAc,GAAGb,WAAW,CAAC,MAAM;AACvC,QAAIQ,YAAJ,EAAkB;AAChBC,MAAAA,eAAe,CAAED,YAAD,IAAkB,IAAnB,CAAf;AACD;;AACDG,IAAAA,eAAe,CAAEG,IAAD,IAAU,CAACA,IAAZ,CAAf;AACD,GALiC,EAK/B,CAACN,YAAD,CAL+B,CAAlC;;AAOA,QAAMO,oBAAoB,GAAIC,IAAD,IAAU;AACrCP,IAAAA,eAAe,CAAED,YAAD,IAAkBQ,IAAnB,CAAf;AACD,GAFD;;AAIA,QAAMC,QAAQ,GAAIC,IAAD,IAAU;AACzB,UAAMF,IAAI,GAAG;AACXE,MAAAA,IADW;AAEXC,MAAAA,OAAO,EAAE;AAFE,KAAb;AAIAZ,IAAAA,QAAQ,CAAED,KAAD,IAAWA,KAAK,CAACc,MAAN,CAAaJ,IAAb,CAAZ,CAAR;AACD,GAND;;AAQA,QAAMK,QAAQ,GAAIC,EAAD,IAAQ;AACvBf,IAAAA,QAAQ,CAAED,KAAD,IAAWA,KAAK,CAACiB,MAAN,CAAcP,IAAD,IAAUA,IAAI,CAACM,EAAL,KAAYA,EAAnC,CAAZ,CAAR;AACD,GAFD;;AAIA,QAAME,QAAQ,GAAG,CAACF,EAAD,EAAKJ,IAAL,KAAc;AAC3BL,IAAAA,cAAc;AACdN,IAAAA,QAAQ,CAAED,KAAD,IACCA,KAAK,CAACmB,GAAN,CAAWT,IAAD,IACTA,IAAI,CAACM,EAAL,KAAYA,EAAZ,GAAiB,EAAE,GAAGN,IAAL;AAAWE,MAAAA;AAAX,KAAjB,GAAqCF,IADtC,CADF,CAAR;AAID,GANH;;AAQA,QAAMU,QAAQ,GAAIJ,EAAD,IAAQ;AACvBf,IAAAA,QAAQ,CAAED,KAAD,IACPA,KAAK,CAACmB,GAAN,CAAWT,IAAD,IACRA,IAAI,CAACM,EAAL,KAAYA,EAAZ,GAAiB,EAAE,GAAGN,IAAL;AAAWG,MAAAA,OAAO,EAAE,CAACH,IAAI,CAACG;AAA1B,KAAjB,GAAuDH,IADzD,CADM,CAAR;AAKD,GAND;;AAUA,sBACE,QAAC,YAAD;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,QAAQ,EAAEC;AAAtB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,QAAD;AACE,MAAA,KAAK,EAAEX,KADT;AAEE,MAAA,QAAQ,EAAEoB,QAFZ;AAGE,MAAA,QAAQ,EAAEL,QAHZ;AAIE,MAAA,oBAAoB,EAAEN,oBAJxB;AAKE,MAAA,cAAc,EAAEF;AALlB;AAAA;AAAA;AAAA;AAAA,YAFF,EASGH,YAAY,iBACX,QAAC,QAAD;AACE,MAAA,QAAQ,EAAEO,QADZ;AAEE,MAAA,YAAY,EAAET,YAFhB;AAGE,MAAA,cAAc,EAAEK,cAHlB;AAIE,MAAA,QAAQ,EAAEW,QAJZ;AAKE,MAAA,YAAY,EAAEd;AALhB;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD;;GAtEQL,G;;KAAAA,G;AAwET,eAAeA,GAAf","sourcesContent":["import { useState, useRef, useCallback } from 'react';\nimport ToDoEdit from './components/ToDoEdit';\nimport ToDoInsert from './components/ToDoInsert';\nimport TodoList from './components/TodoList';\nimport TodoTemplate from './components/ToDoTemplate';\n\nfunction App() {\n  const [todos, setTodos] = useState([]);\n  const [selectedTodo, setSelectedTodo] = useState(null);\n  const [insertToggle, setInsertToggle] = useState(false);\n\n\n  const nextId = useRef();\n\n  const onInsertToggle = useCallback(() => {\n    if (selectedTodo) {\n      setSelectedTodo((selectedTodo) => null);\n    }\n    setInsertToggle((prev) => !prev);\n  }, [selectedTodo]);\n\n  const onChangeSelectedTodo = (todo) => {\n    setSelectedTodo((selectedTodo) => todo);\n  };\n\n  const onInsert = (text) => {\n    const todo = {\n      text,\n      checked: false,\n    };\n    setTodos((todos) => todos.concat(todo)); \n  }\n\n  const onRemove = (id) => {\n    setTodos((todos) => todos.filter((todo) => todo.id !== id));\n  }\n\n  const onUpdate = (id, text) => {\n      onInsertToggle();\n      setTodos((todos) => \n                todos.map((todo) => \n                (todo.id === id ? { ...todo, text } : todo)),\n      );\n    }\n\n  const onToggle = (id) => {\n    setTodos((todos) =>\n      todos.map((todo) =>\n        todo.id === id ? { ...todo, checked: !todo.checked } : todo,\n      ),\n    );\n  }\n\n\n  \n  return (\n    <TodoTemplate>\n      <ToDoInsert onInsert={onInsert} />\n      <TodoList\n        todos={todos}\n        onToggle={onToggle}\n        onRemove={onRemove}\n        onChangeSelectedTodo={onChangeSelectedTodo}\n        onInsertToggle={onInsertToggle}\n      />\n      {insertToggle && (\n        <ToDoEdit\n          onInsert={onInsert}\n          selectedTodo={selectedTodo}\n          onInsertToggle={onInsertToggle}\n          onUpdate={onUpdate}\n          insertToggle={insertToggle}\n        />\n      )}\n    </TodoTemplate>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}